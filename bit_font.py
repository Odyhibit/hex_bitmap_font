import time


font5x7 = [
    0x00, 0x00, 0x00, 0x00, 0x00,  # (space)
    0x00, 0x00, 0x5F, 0x00, 0x00,  # !
    0x00, 0x07, 0x00, 0x07, 0x00,  # "
    0x14, 0x7F, 0x14, 0x7F, 0x14,  # #
    0x24, 0x2A, 0x7F, 0x2A, 0x12,  # $
    0x23, 0x13, 0x08, 0x64, 0x62,  # %
    0x36, 0x49, 0x55, 0x22, 0x50,  # &
    0x00, 0x05, 0x03, 0x00, 0x00,  # '
    0x00, 0x1C, 0x22, 0x41, 0x00,  # (
    0x00, 0x41, 0x22, 0x1C, 0x00,  # )
    0x08, 0x2A, 0x1C, 0x2A, 0x08,  # *
    0x08, 0x08, 0x3E, 0x08, 0x08,  # +
    0x00, 0x50, 0x30, 0x00, 0x00,  # ,
    0x08, 0x08, 0x08, 0x08, 0x08,  # -
    0x00, 0x60, 0x60, 0x00, 0x00,  # .
    0x20, 0x10, 0x08, 0x04, 0x02,  # /
    0x3E, 0x51, 0x49, 0x45, 0x3E,  # 0
    0x00, 0x42, 0x7F, 0x40, 0x00,  # 1
    0x42, 0x61, 0x51, 0x49, 0x46,  # 2
    0x21, 0x41, 0x45, 0x4B, 0x31,  # 3
    0x18, 0x14, 0x12, 0x7F, 0x10,  # 4
    0x27, 0x45, 0x45, 0x45, 0x39,  # 5
    0x3C, 0x4A, 0x49, 0x49, 0x30,  # 6
    0x01, 0x71, 0x09, 0x05, 0x03,  # 7
    0x36, 0x49, 0x49, 0x49, 0x36,  # 8
    0x06, 0x49, 0x49, 0x29, 0x1E,  # 9
    0x00, 0x36, 0x36, 0x00, 0x00,  # :
    0x00, 0x56, 0x36, 0x00, 0x00,  # ;
    0x00, 0x08, 0x14, 0x22, 0x41,  # <
    0x14, 0x14, 0x14, 0x14, 0x14,  # =
    0x41, 0x22, 0x14, 0x08, 0x00,  # >
    0x02, 0x01, 0x51, 0x09, 0x06,  # ?
    0x32, 0x49, 0x79, 0x41, 0x3E,  # @
    0x7E, 0x11, 0x11, 0x11, 0x7E,  # A
    0x7F, 0x49, 0x49, 0x49, 0x36,  # B
    0x3E, 0x41, 0x41, 0x41, 0x22,  # C
    0x7F, 0x41, 0x41, 0x22, 0x1C,  # D
    0x7F, 0x49, 0x49, 0x49, 0x41,  # E
    0x7F, 0x09, 0x09, 0x01, 0x01,  # F
    0x3E, 0x41, 0x41, 0x51, 0x32,  # G
    0x7F, 0x08, 0x08, 0x08, 0x7F,  # H
    0x00, 0x41, 0x7F, 0x41, 0x00,  # I
    0x20, 0x40, 0x41, 0x3F, 0x01,  # J
    0x7F, 0x08, 0x14, 0x22, 0x41,  # K
    0x7F, 0x40, 0x40, 0x40, 0x40,  # L
    0x7F, 0x02, 0x04, 0x02, 0x7F,  # M
    0x7F, 0x04, 0x08, 0x10, 0x7F,  # N
    0x3E, 0x41, 0x41, 0x41, 0x3E,  # O
    0x7F, 0x09, 0x09, 0x09, 0x06,  # P
    0x3E, 0x41, 0x51, 0x21, 0x5E,  # Q
    0x7F, 0x09, 0x19, 0x29, 0x46,  # R
    0x46, 0x49, 0x49, 0x49, 0x31,  # S
    0x01, 0x01, 0x7F, 0x01, 0x01,  # T
    0x3F, 0x40, 0x40, 0x40, 0x3F,  # U
    0x1F, 0x20, 0x40, 0x20, 0x1F,  # V
    0x7F, 0x20, 0x18, 0x20, 0x7F,  # W
    0x63, 0x14, 0x08, 0x14, 0x63,  # X
    0x03, 0x04, 0x78, 0x04, 0x03,  # Y
    0x61, 0x51, 0x49, 0x45, 0x43,  # Z
    0x00, 0x00, 0x7F, 0x41, 0x41,  # [
    0x02, 0x04, 0x08, 0x10, 0x20,  # \
    0x41, 0x41, 0x7F, 0x00, 0x00,  # ]
    0x04, 0x02, 0x01, 0x02, 0x04,  # ^
    0x40, 0x40, 0x40, 0x40, 0x40,  # _
    0x00, 0x01, 0x02, 0x04, 0x00,  # `
    0x20, 0x54, 0x54, 0x54, 0x78,  # a
    0x7F, 0x48, 0x44, 0x44, 0x38,  # b
    0x38, 0x44, 0x44, 0x44, 0x20,  # c
    0x38, 0x44, 0x44, 0x48, 0x7F,  # d
    0x38, 0x54, 0x54, 0x54, 0x18,  # e
    0x08, 0x7E, 0x09, 0x01, 0x02,  # f
    0x08, 0x14, 0x54, 0x54, 0x3C,  # g
    0x7F, 0x08, 0x04, 0x04, 0x78,  # h
    0x00, 0x44, 0x7D, 0x40, 0x00,  # i
    0x20, 0x40, 0x44, 0x3D, 0x00,  # j
    0x00, 0x7F, 0x10, 0x28, 0x44,  # k
    0x00, 0x41, 0x7F, 0x40, 0x00,  # l
    0x7C, 0x04, 0x18, 0x04, 0x78,  # m
    0x7C, 0x08, 0x04, 0x04, 0x78,  # n
    0x38, 0x44, 0x44, 0x44, 0x38,  # o
    0x7C, 0x14, 0x14, 0x14, 0x08,  # p
    0x08, 0x14, 0x14, 0x18, 0x7C,  # q
    0x7C, 0x08, 0x04, 0x04, 0x08,  # r
    0x48, 0x54, 0x54, 0x54, 0x20,  # s
    0x04, 0x3F, 0x44, 0x40, 0x20,  # t
    0x3C, 0x40, 0x40, 0x20, 0x7C,  # u
    0x1C, 0x20, 0x40, 0x20, 0x1C,  # v
    0x3C, 0x40, 0x30, 0x40, 0x3C,  # w
    0x44, 0x28, 0x10, 0x28, 0x44,  # x
    0x0C, 0x50, 0x50, 0x50, 0x3C,  # y
    0x44, 0x64, 0x54, 0x4C, 0x44,  # z
    0x00, 0x08, 0x36, 0x41, 0x00,  # {
    0x00, 0x00, 0x7F, 0x00, 0x00,  # |
    0x00, 0x41, 0x36, 0x08, 0x00,  # }
    0x08, 0x08, 0x2A, 0x1C, 0x08,  # ->
    0x08, 0x1C, 0x2A, 0x08, 0x08]  # <-


def print_alphabet(font):
    char = []
    line = 0
    while line < len(font):
        offset = line
        for i in range(5):
            if offset + i < len(font):
                char.append(font[offset + i])
        line += 5
        print_letter(char)
        char.clear()


def print_letter(char):
    for byte in char:
        bin_byte = bin(byte)[2:].zfill(8)
        bin_str = str(bin_byte).replace("0", " ").replace("1", "█")
        print(bin_str)
    print()
    time.sleep(0.25)


def text_to_decimal_5x7(text, font):
    hex_list = []
    for letter in text:
        letter_offset = ord(letter)
        letter_offset -= 32
        start = letter_offset * 5
        end = start + 5
        hex_list.append(font[start: end])
        hex_list.append([0])  # space between letters
    return " ".join([" ".join(map(str, row)) for row in hex_list])


def text_to_hex_5x7(text, font):
    hex_of_text = []
    output = ""
    for letter in text:
        #  font starts with space char
        letter_offset = ord(letter)
        letter_offset -= 32
        start = letter_offset * 5
        end = start + 5
        hex_of_text += font[start:end]
        # the following line spaces characters out by 1
        hex_of_text += [0]
    for item in hex_of_text:
        output += format(item, 'x').zfill(2) + " "
        #print(format(item, 'x').zfill(2) + " ", end="")
    #print()
    return output[:-1]


def display_hex_as_font(hex_string):
    hex_list = hex_string.split(" ")
    for hex_byte in hex_list:
        char_map = format(int(hex_byte, 16), 'b').zfill(8)
        for bit in char_map:
            #print(bit.replace("0", " ").replace("1", "█"), end="")
            print(bit.replace("0", " ").replace("1", "█"), end="")
        print()



# main
#  print_alphabet(font5x7)
hex_string1 = "7f 20 18 20 7f 00 3e 41 41 51 32 00 3f 40 40 40 3f 00 3e 41 41 41 22 00 01 01 7f 01 01 00 7f 09 09 01 " \
              "01 00 00 08 36 41 00 00 01 01 7f 01 01 00 7f 08 04 04 78 00 38 54 54 54 18 00 40 40 40 40 40 00 08 7e " \
              "09 01 02 00 3e 51 49 45 3e 00 3c 40 30 40 3c 00 00 42 7f 40 00 00 40 40 40 40 40 00 3e 41 41 41 3e 00 " \
              "3c 40 30 40 3c 00 00 41 7f 40 00 00 40 40 40 40 40 00 48 54 54 54 20 00 04 3f 44 40 20 00 7c 08 04 04 " \
              "08 00 00 44 7d 40 00 00 00 7f 10 28 44 00 38 54 54 54 18 00 48 54 54 54 20 00 00 41 36 08 00 00"
display_hex_as_font(hex_string1)
#  text_to_5x7("WGUCTF{The_f0w1_Owl_strikes}", font5x7)
#  text_to_hex_5x7("WGUCTF{The_f0w1_Owl_strikes}", font5x7)
print(text_to_hex_5x7("flag{W1NN3R!}", font5x7))
test = "08 7e 09 01 02 00 00 41 7f 40 00 00 20 54 54 54 78 00 08 14 54 54 3c 00 00 08 36 41 00 00 7f 20 18 20 7f 00 00 42 7f 40 00 00 7f 04 08 10 7f 00 7f 04 08 10 7f 00 21 41 45 4b 31 00 7f 09 19 29 46 00 00 00 5f 00 00 00 41 36 08"
display_hex_as_font(test)
wgu_hex = text_to_hex_5x7("WGU", font5x7)
print(wgu_hex)
print(text_to_decimal_5x7("WGU", font5x7))
#display_hex_as_font(str(wgu_hex))
#test_hex = text_to_hex_5x7("flag{This_is_BS}", font5x7)
#display_hex_as_font(test_hex)
#print(text_to_hex_5x7("HEY{this_flag_is_crazy}", font5x7))

